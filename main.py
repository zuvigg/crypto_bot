import requests
import time
import telebot
from binance.client import Client

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BINANCE_API_KEY = "6GgTf3eDcPs3Zle1PJzRSfgt6ay4ynYBnCDncJxF6Hu7bHjdHIBASpsexfXsyCX0"
BINANCE_SECRET_KEY = "gaSPV8vLcVu7nmJL2jCH6NQiMh7h5nU3kt5p8QPkTOyNp0FCkZ4oi9ecldXrwUjc"
TELEGRAM_BOT_TOKEN = "8034186947:AAFljqSGjx49tiN4D2fP8XN7au6IofOZDFg"
TELEGRAM_CHAT_ID = "977501740"

# –ü–æ—Ä–æ–≥–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –≤ %
PRICE_CHANGE_THRESHOLD = 3.0  # –ù–∞–ø—Ä–∏–º–µ—Ä, 3%
CHECK_INTERVAL = 60  # –í—Ä–µ–º—è –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
binance_client = Client(BINANCE_API_KEY, BINANCE_SECRET_KEY)
telegram_bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)


# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {"chat_id": TELEGRAM_CHAT_ID, "text": message}
    requests.post(url, json=payload)


# –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω
previous_prices = {}


def monitor_prices():
    global previous_prices
    try:
        tickers = binance_client.get_ticker()

        for ticker in tickers:
            symbol = ticker['symbol']
            if not symbol.endswith("USDT"):
                continue

            last_price = float(ticker['lastPrice'])

            if symbol in previous_prices:
                old_price = previous_prices[symbol]
                if old_price == 0:
                    continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —Å—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ —Ä–∞–≤–Ω–∞ 0

                price_change = ((last_price - old_price) / old_price) * 100

                if abs(price_change) >= PRICE_CHANGE_THRESHOLD:
                    message = f"‚ö° {symbol}: —Ä–µ–∑–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã {price_change:.2f}% ({old_price} ‚Üí {last_price})"
                    send_telegram_message(message)
                    print(message)

            previous_prices[symbol] = last_price
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
        time.sleep(5)  # –ü–æ–¥–æ–∂–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã –∞–∫—Ç–∏–≤–∞
def get_price(symbol):
    try:
        ticker = binance_client.get_symbol_ticker(symbol=symbol)
        return f"–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ {symbol}: {ticker['price']} USDT"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã: {e}"


# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–ø-5 –∞–∫—Ç–∏–≤–æ–≤ –ø–æ —Ä–æ—Å—Ç—É
def get_top_gainers():
    tickers = binance_client.get_ticker()
    changes = [(t['symbol'], float(t['priceChangePercent'])) for t in tickers if t['symbol'].endswith("USDT")]
    top_gainers = sorted(changes, key=lambda x: x[1], reverse=True)[:5]
    return "üî• –¢–æ–ø-5 –∞–∫—Ç–∏–≤–æ–≤ –ø–æ —Ä–æ—Å—Ç—É:\n" + "\n".join([f"{s}: {p:.2f}%" for s, p in top_gainers])


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ Telegram
@telegram_bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    telegram_bot.reply_to(message,
                          "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ù–∞—á–∞—Ç—å\n/help - –°–ø—Ä–∞–≤–∫–∞\n/price SYMBOL - –£–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É –∞–∫—Ç–∏–≤–∞ (–ø—Ä–∏–º–µ—Ä: /price BTCUSDT)\n/top - –¢–æ–ø-5 –∞–∫—Ç–∏–≤–æ–≤ –ø–æ —Ä–æ—Å—Ç—É")


@telegram_bot.message_handler(commands=['price'])
def send_price(message):
    try:
        symbol = message.text.split()[1].upper()
        response = get_price(symbol)
    except IndexError:
        response = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å–∏–º–≤–æ–ª –∞–∫—Ç–∏–≤–∞ (–ø—Ä–∏–º–µ—Ä: /price BTCUSDT)"
    telegram_bot.reply_to(message, response)


@telegram_bot.message_handler(commands=['top'])
def send_top_gainers(message):
    response = get_top_gainers()
    telegram_bot.reply_to(message, response)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    import threading


    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    def run_monitor():
        while True:
            try:
                monitor_prices()
                time.sleep(CHECK_INTERVAL)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞: {e}")
                time.sleep(10)


    monitoring_thread = threading.Thread(target=run_monitor, daemon=True)
    monitoring_thread.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    telegram_bot.polling(none_stop=True)
